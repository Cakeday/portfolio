{"version":3,"sources":["components/Particles.js","components/Hero.js","components/Projects.js","components/SkillCards.js","components/SkillsLayout.js","App.js","serviceWorker.js","index.js"],"names":["ParticleCanvas","style","className","params","particles","number","value","density","enable","value_area","color","size","opacity","animation","lineLinked","move","speed","interactivity","events","onHover","mode","modes","Hero","Container","fluid","Projects","Carousel","Item","Caption","FrontEnd","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","ListGroup","variant","BackEnd","Database","Skills","Row","Col","md","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.095f8d3b.chunk.js","sourcesContent":["import React from 'react'\nimport Particles from 'react-particles-js'\n\nexport function ParticleCanvas() {\n\n    const style = {\n        'touch-action': 'none'\n    }\n\n    return (\n            <Particles style={style} className=\"h-100 w-100\"\n                params={{ \n                    particles: { \n                        number: { \n                            value: 200, \n                            density: { \n                                enable: true, \n                                value_area: 1000, \n                            } \n                        },\n                        color: {\n                            value: [\"#9933ff\", \"#00ccff\"]\n                        },\n                        size: {\n                            value: 2\n                        },\n                        opacity: {\n                            animation : {\n                                enable: false\n                            }\n                        },\n                        lineLinked: {\n                            color: \"#343a40\"\n                        },\n                        move: {\n                            speed: 0.7\n                        }\n                    },\n                    interactivity: {\n                        events: {\n                            onHover: {\n                                enable: true,\n                                mode: \"repulse\"\n                            },\n                            modes: {\n                                \n                            }\n                        }\n                    } \n                }} \n            >\n            </Particles>\n    )\n}","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport { ParticleCanvas } from './Particles';\n\n\n\n\n\nexport function Hero() {\n\n    const style = {\n        'background-image': 'radial-gradient(rgba(248, 249, 250, 1), rgba(248, 249, 250, 0))'\n    }\n\n\n\n    return (\n        <Container className=\"vh-100 d-flex flex-column justify-content-center bg-light position-relative\" fluid>\n            <ParticleCanvas></ParticleCanvas>\n            <h1 style={style} className=\"text-center align-self-center position-absolute w-50 align-middle\">Hello World,<br></br>I'm Caleb</h1>\n        </Container>\n    )\n}\n\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport Container from 'react-bootstrap/Container'\n\n\n\n\nexport function Projects() {\n    return (\n        <Container fluid className=\"vh-100 bg-dark\">\n        \n            <Carousel className=\"h-100 w-100 justify-content-center\">\n\n                <Carousel.Item className=\"h-100\">\n                    <div className=\"d-flex align-items-center justify-content-center flex-column vh-100\">\n                        <h1 className=\"text-center text-light\">Soundscape</h1>\n                        <Carousel.Caption>\n                            <p className=\"text-light\">A music creation app that allows you to tweak your own synthesizer and make some funky beats :)</p>\n                        </Carousel.Caption>\n                    </div>\n                </Carousel.Item>\n\n                <Carousel.Item className=\"h-100\">\n                    <div className=\"d-flex align-items-center justify-content-center flex-column vh-100\">\n                        <h1 className=\"text-center text-light\">Circles (Coming Soon)</h1>\n                        <Carousel.Caption>\n                            <p className=\"text-light\">A social media app that connects people based off of social circles</p>\n                        </Carousel.Caption>\n                    </div>\n                </Carousel.Item>\n\n                <Carousel.Item className=\"h-100\">\n                    <div className=\"d-flex align-items-center justify-content-center flex-column vh-100\">\n                        <h1 className=\"text-center text-light\">Cards Against Humanity (Coming Soon)</h1>\n                        <Carousel.Caption>\n                            <p className=\"text-light\">A real-time card game app that allows players to play Cards Against Humanity in realtime... with a few extra rules :)</p>\n                        </Carousel.Caption>\n                    </div>\n                </Carousel.Item>\n\n            </Carousel>\n        </Container>\n    )\n}","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\n\n\n\n\nexport function FrontEnd() {\n    return (\n        <Accordion>\n            <Card className=\"shadow-sm\">\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    <h3 className=\"text-center\">Front-End</h3> \n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <ListGroup variant=\"flush\">\n                            <h5>Languages</h5>\n                            <ListGroup.Item>HTML5</ListGroup.Item>\n                            <ListGroup.Item>CSS3</ListGroup.Item>\n                            <ListGroup.Item>Javascript (ES6 & Typescript)</ListGroup.Item>\n                            <h5 className=\"pt-4\">Frameworks</h5>\n                            <ListGroup.Item>React</ListGroup.Item>\n                            <ListGroup.Item>Angular 7</ListGroup.Item>\n                            <ListGroup.Item>Bootstrap</ListGroup.Item>\n                        </ListGroup>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n    )\n}\n\n\nexport function BackEnd() {\n    return (\n        <Accordion>\n            <Card className=\"shadow-sm\">\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                    <h3 className=\"text-center\">Server-Side</h3>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                        <ListGroup variant=\"flush\">\n                            <h5>Languages</h5>\n                            <ListGroup.Item>Javascript</ListGroup.Item>\n                            <ListGroup.Item>Python</ListGroup.Item>\n                            <ListGroup.Item>Java</ListGroup.Item>\n                            <h5 className=\"pt-4\">Frameworks</h5>\n                            <ListGroup.Item>Node</ListGroup.Item>\n                            <ListGroup.Item>Django</ListGroup.Item>\n                            <ListGroup.Item>Flask</ListGroup.Item>\n                            <ListGroup.Item>Spring Boot</ListGroup.Item>\n                            <ListGroup.Item>Flask</ListGroup.Item>\n                        </ListGroup>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n    )\n}\n\nexport function Database() {\n    return (\n        <Accordion>\n            <Card className=\"shadow-sm mt-md-4\">\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    <h3 className=\"text-center\">Database</h3>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <ListGroup variant=\"flush\">\n                            <h5>SQL</h5>\n                            <ListGroup.Item>MySQL</ListGroup.Item>\n                            <ListGroup.Item>SQLite</ListGroup.Item>\n                            <h5 className=\"pt-4\">NoSQL</h5>\n                            <ListGroup.Item>MongoDB</ListGroup.Item>\n                        </ListGroup>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n    )\n}","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nimport { FrontEnd, BackEnd, Database } from './SkillCards'\n\n\nexport function Skills() {\n\n\n    return (\n        <Container fluid className=\"min-vh-100 bg-light\">\n            <h1 className=\"text-center pt-5\">Things I'm good at</h1>\n            <Row className=\"justify-content-center mt-5\">\n                <Col md={5}>\n                    <FrontEnd></FrontEnd>\n                </Col>\n                <Col md={5}>\n                    <BackEnd></BackEnd>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Col md={5}>\n                    <Database></Database>\n                </Col>\n            </Row>\n\n\n\n        </Container>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { Hero } from './components/Hero';\nimport { Projects } from './components/Projects';\nimport { Skills } from './components/SkillsLayout';\n\nfunction App() {\n  return (\n    <div>\n      <Hero></Hero>\n      <Projects></Projects>\n      <Skills></Skills>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}